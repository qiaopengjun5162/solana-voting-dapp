# .pre-commit-config.yaml

# 当一个钩子失败时，继续运行其他钩子
fail_fast: false
default_install_hook_types: [pre-commit, commit-msg]
default_stages: [pre-commit, manual]

repos:
  # --- 通用文件检查和格式化 ---
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0 # 使用较新的版本
    hooks:
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-case-conflict
      - id: check-merge-conflict

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8 # 或最新 prettier 版本
    hooks:
      - id: prettier

  # --- 本地钩子，用于 Rust 和其他特定工具 ---
  - repo: local
    hooks:
      # 自动格式化 Rust 代码
      - id: cargo-fmt
        name: Format Rust code
        language: rust
        types: [rust]
        entry: cargo fmt --
      # 自动格式化 TOML 文件
      - id: taplo-fmt
        name: Format TOML files
        language: rust # 可以复用 rust 环境
        types: [toml]
        entry: taplo fmt --option reorder_keys=true
      # 检查拼写错误
      - id: typos
        name: Check for typos
        language: rust
        types: [text]
        entry: typos
        exclude: '(\.lock$|scripts/run_full_test\.ts$|output\.jsonl$)'
      # 检查 Rust 代码中的潜在问题
      - id: cargo-clippy
        name: Lint with Clippy
        language: rust
        entry: cargo clippy -p voting --all-targets -- -D warnings
        pass_filenames: false

        # 这个检查比较慢，如果觉得影响提交速度，可以注释掉或移到 CI
      # 检查依赖项中的安全漏洞
      - id: cargo-deny
        name: Check for dependency vulnerabilities
        language: rust
        types: [rust]
        # 只在 Cargo.toml 或 Cargo.lock 变动时运行，提高效率
        files: ^(Cargo\.toml|Cargo\.lock)$
        entry: cargo deny check
