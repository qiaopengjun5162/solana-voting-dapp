//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum VotingError {
    /// 6000 - Poll not started yet
    #[error("Poll not started yet")]
    PollNotStarted = 0x1770,
    /// 6001 - Poll ended
    #[error("Poll ended")]
    PollEnded = 0x1771,
    /// 6002 - Unauthorized: Only the poll authority can perform this action.
    #[error("Unauthorized: Only the poll authority can perform this action.")]
    Unauthorized = 0x1772,
    /// 6003 - Maximum number of candidates reached.
    #[error("Maximum number of candidates reached.")]
    MaxCandidatesReached = 0x1773,
    /// 6004 - This candidate is not valid for this poll.
    #[error("This candidate is not valid for this poll.")]
    InvalidCandidateForPoll = 0x1774,
}

impl solana_program_error::PrintProgramError for VotingError {
    fn print<E>(&self) {
        solana_msg::msg!(&self.to_string());
    }
}

impl<T> solana_decode_error::DecodeError<T> for VotingError {
    fn type_of() -> &'static str {
        "VotingError"
    }
}
